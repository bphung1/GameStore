@model GameStore.WebUI.Models.CustomerViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Customer Info</h4>
    <hr />
    <d1 class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CustomerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CustomerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
    </d1>
</div>

<p>
    <a asp-controller="GameOrder" asp-action="Create"
       asp-all-route-data="@(new Dictionary<string, string> { { "customerId", Model.CustomerId.ToString() } })">
        Add New Order
    </a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GameOrders.First().OrderID)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ListOfGameOrder)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => Model.FirstName)
                    @Html.DisplayFor(modelItem => Model.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderID)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", "GameOrder", new { id = item.OrderID })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}